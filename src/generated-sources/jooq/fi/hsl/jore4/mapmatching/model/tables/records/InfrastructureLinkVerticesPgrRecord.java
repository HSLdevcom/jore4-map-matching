/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore4.mapmatching.model.tables.records;


import fi.hsl.jore4.mapmatching.model.tables.InfrastructureLinkVerticesPgr;

import org.geolatte.geom.C2D;
import org.geolatte.geom.Point;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Topology nodes created for infrastructure links by pgRougting
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InfrastructureLinkVerticesPgrRecord extends UpdatableRecordImpl<InfrastructureLinkVerticesPgrRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>routing.infrastructure_link_vertices_pgr.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>routing.infrastructure_link_vertices_pgr.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>routing.infrastructure_link_vertices_pgr.cnt</code>.
     */
    public void setCnt(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>routing.infrastructure_link_vertices_pgr.cnt</code>.
     */
    public Integer getCnt() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>routing.infrastructure_link_vertices_pgr.chk</code>.
     */
    public void setChk(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>routing.infrastructure_link_vertices_pgr.chk</code>.
     */
    public Integer getChk() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>routing.infrastructure_link_vertices_pgr.ein</code>.
     */
    public void setEin(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>routing.infrastructure_link_vertices_pgr.ein</code>.
     */
    public Integer getEin() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>routing.infrastructure_link_vertices_pgr.eout</code>.
     */
    public void setEout(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>routing.infrastructure_link_vertices_pgr.eout</code>.
     */
    public Integer getEout() {
        return (Integer) get(4);
    }

    /**
     * Setter for
     * <code>routing.infrastructure_link_vertices_pgr.the_geom</code>.
     */
    public void setTheGeom(Point<C2D> value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>routing.infrastructure_link_vertices_pgr.the_geom</code>.
     */
    public Point<C2D> getTheGeom() {
        return (Point<C2D>) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InfrastructureLinkVerticesPgrRecord
     */
    public InfrastructureLinkVerticesPgrRecord() {
        super(InfrastructureLinkVerticesPgr.INFRASTRUCTURE_LINK_VERTICES_PGR);
    }

    /**
     * Create a detached, initialised InfrastructureLinkVerticesPgrRecord
     */
    public InfrastructureLinkVerticesPgrRecord(Long id, Integer cnt, Integer chk, Integer ein, Integer eout, Point<C2D> theGeom) {
        super(InfrastructureLinkVerticesPgr.INFRASTRUCTURE_LINK_VERTICES_PGR);

        setId(id);
        setCnt(cnt);
        setChk(chk);
        setEin(ein);
        setEout(eout);
        setTheGeom(theGeom);
        resetChangedOnNotNull();
    }
}
