/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore4.mapmatching.model.tables.records;


import fi.hsl.jore4.mapmatching.model.tables.InfrastructureSource;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * The enumerated sources for infrastructure network entities
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InfrastructureSourceRecord extends UpdatableRecordImpl<InfrastructureSourceRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>routing.infrastructure_source.infrastructure_source_id</code>. The
     * numeric enum value for the infrastructure element source. This enum code
     * is only local to this routing schema. ATM, it is not intended to be
     * distributed to or shared across other JORE4 services.
     */
    public void setInfrastructureSourceId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>routing.infrastructure_source.infrastructure_source_id</code>. The
     * numeric enum value for the infrastructure element source. This enum code
     * is only local to this routing schema. ATM, it is not intended to be
     * distributed to or shared across other JORE4 services.
     */
    public Integer getInfrastructureSourceId() {
        return (Integer) get(0);
    }

    /**
     * Setter for
     * <code>routing.infrastructure_source.infrastructure_source_name</code>.
     * The short name for the infrastructure element source
     */
    public void setInfrastructureSourceName(String value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>routing.infrastructure_source.infrastructure_source_name</code>.
     * The short name for the infrastructure element source
     */
    public String getInfrastructureSourceName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>routing.infrastructure_source.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>routing.infrastructure_source.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InfrastructureSourceRecord
     */
    public InfrastructureSourceRecord() {
        super(InfrastructureSource.INFRASTRUCTURE_SOURCE);
    }

    /**
     * Create a detached, initialised InfrastructureSourceRecord
     */
    public InfrastructureSourceRecord(Integer infrastructureSourceId, String infrastructureSourceName, String description) {
        super(InfrastructureSource.INFRASTRUCTURE_SOURCE);

        setInfrastructureSourceId(infrastructureSourceId);
        setInfrastructureSourceName(infrastructureSourceName);
        setDescription(description);
        resetChangedOnNotNull();
    }
}
