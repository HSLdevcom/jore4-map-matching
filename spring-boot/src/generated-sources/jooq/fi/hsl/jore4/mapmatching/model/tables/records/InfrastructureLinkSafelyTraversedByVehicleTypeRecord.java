/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore4.mapmatching.model.tables.records;


import fi.hsl.jore4.mapmatching.model.tables.InfrastructureLinkSafelyTraversedByVehicleType;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Which infrastructure links are safely traversed by which vehicle types?
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InfrastructureLinkSafelyTraversedByVehicleTypeRecord extends UpdatableRecordImpl<InfrastructureLinkSafelyTraversedByVehicleTypeRecord> implements Record2<Long, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>routing.infrastructure_link_safely_traversed_by_vehicle_type.infrastructure_link_id</code>. The infrastructure link that can be safely traversed by the vehicle type
     */
    public void setInfrastructureLinkId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>routing.infrastructure_link_safely_traversed_by_vehicle_type.infrastructure_link_id</code>. The infrastructure link that can be safely traversed by the vehicle type
     */
    public Long getInfrastructureLinkId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>routing.infrastructure_link_safely_traversed_by_vehicle_type.vehicle_type</code>. The vehicle type that can safely traverse the infrastructure link
     */
    public void setVehicleType(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>routing.infrastructure_link_safely_traversed_by_vehicle_type.vehicle_type</code>. The vehicle type that can safely traverse the infrastructure link
     */
    public String getVehicleType() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return InfrastructureLinkSafelyTraversedByVehicleType.INFRASTRUCTURE_LINK_SAFELY_TRAVERSED_BY_VEHICLE_TYPE.INFRASTRUCTURE_LINK_ID;
    }

    @Override
    public Field<String> field2() {
        return InfrastructureLinkSafelyTraversedByVehicleType.INFRASTRUCTURE_LINK_SAFELY_TRAVERSED_BY_VEHICLE_TYPE.VEHICLE_TYPE;
    }

    @Override
    public Long component1() {
        return getInfrastructureLinkId();
    }

    @Override
    public String component2() {
        return getVehicleType();
    }

    @Override
    public Long value1() {
        return getInfrastructureLinkId();
    }

    @Override
    public String value2() {
        return getVehicleType();
    }

    @Override
    public InfrastructureLinkSafelyTraversedByVehicleTypeRecord value1(Long value) {
        setInfrastructureLinkId(value);
        return this;
    }

    @Override
    public InfrastructureLinkSafelyTraversedByVehicleTypeRecord value2(String value) {
        setVehicleType(value);
        return this;
    }

    @Override
    public InfrastructureLinkSafelyTraversedByVehicleTypeRecord values(Long value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InfrastructureLinkSafelyTraversedByVehicleTypeRecord
     */
    public InfrastructureLinkSafelyTraversedByVehicleTypeRecord() {
        super(InfrastructureLinkSafelyTraversedByVehicleType.INFRASTRUCTURE_LINK_SAFELY_TRAVERSED_BY_VEHICLE_TYPE);
    }

    /**
     * Create a detached, initialised InfrastructureLinkSafelyTraversedByVehicleTypeRecord
     */
    public InfrastructureLinkSafelyTraversedByVehicleTypeRecord(Long infrastructureLinkId, String vehicleType) {
        super(InfrastructureLinkSafelyTraversedByVehicleType.INFRASTRUCTURE_LINK_SAFELY_TRAVERSED_BY_VEHICLE_TYPE);

        setInfrastructureLinkId(infrastructureLinkId);
        setVehicleType(vehicleType);
    }
}
