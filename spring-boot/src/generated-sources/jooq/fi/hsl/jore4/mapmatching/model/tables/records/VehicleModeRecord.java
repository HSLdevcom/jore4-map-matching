/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore4.mapmatching.model.tables.records;


import fi.hsl.jore4.mapmatching.model.tables.VehicleMode;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * The vehicle modes from Transmodel:
 * https://www.transmodel-cen.eu/model/index.htm?goto=1:6:1:283
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VehicleModeRecord extends UpdatableRecordImpl<VehicleModeRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>routing.vehicle_mode.vehicle_mode</code>. The vehicle
     * mode from Transmodel:
     * https://www.transmodel-cen.eu/model/index.htm?goto=1:6:1:283
     */
    public void setVehicleMode(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>routing.vehicle_mode.vehicle_mode</code>. The vehicle
     * mode from Transmodel:
     * https://www.transmodel-cen.eu/model/index.htm?goto=1:6:1:283
     */
    public String getVehicleMode() {
        return (String) get(0);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached VehicleModeRecord
     */
    public VehicleModeRecord() {
        super(VehicleMode.VEHICLE_MODE);
    }

    /**
     * Create a detached, initialised VehicleModeRecord
     */
    public VehicleModeRecord(String vehicleMode) {
        super(VehicleMode.VEHICLE_MODE);

        setVehicleMode(vehicleMode);
        resetChangedOnNotNull();
    }
}
