/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore4.mapmatching.model;


import fi.hsl.jore4.mapmatching.model.tables.InfrastructureLink;
import fi.hsl.jore4.mapmatching.model.tables.InfrastructureLinkSafelyTraversedByVehicleType;
import fi.hsl.jore4.mapmatching.model.tables.InfrastructureLinkVerticesPgr;
import fi.hsl.jore4.mapmatching.model.tables.InfrastructureSource;
import fi.hsl.jore4.mapmatching.model.tables.PublicTransportStop;
import fi.hsl.jore4.mapmatching.model.tables.TrafficFlowDirection;
import fi.hsl.jore4.mapmatching.model.tables.VehicleMode;
import fi.hsl.jore4.mapmatching.model.tables.VehicleType;
import fi.hsl.jore4.mapmatching.model.tables.records.InfrastructureLinkRecord;
import fi.hsl.jore4.mapmatching.model.tables.records.InfrastructureLinkSafelyTraversedByVehicleTypeRecord;
import fi.hsl.jore4.mapmatching.model.tables.records.InfrastructureLinkVerticesPgrRecord;
import fi.hsl.jore4.mapmatching.model.tables.records.InfrastructureSourceRecord;
import fi.hsl.jore4.mapmatching.model.tables.records.PublicTransportStopRecord;
import fi.hsl.jore4.mapmatching.model.tables.records.TrafficFlowDirectionRecord;
import fi.hsl.jore4.mapmatching.model.tables.records.VehicleModeRecord;
import fi.hsl.jore4.mapmatching.model.tables.records.VehicleTypeRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in 
 * routing.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<InfrastructureLinkRecord> INFRASTRUCTURE_LINK_PKEY = Internal.createUniqueKey(InfrastructureLink.INFRASTRUCTURE_LINK, DSL.name("infrastructure_link_pkey"), new TableField[] { InfrastructureLink.INFRASTRUCTURE_LINK.INFRASTRUCTURE_LINK_ID }, true);
    public static final UniqueKey<InfrastructureLinkRecord> UK_INFRASTRUCTURE_LINK_EXTERNAL_REF = Internal.createUniqueKey(InfrastructureLink.INFRASTRUCTURE_LINK, DSL.name("uk_infrastructure_link_external_ref"), new TableField[] { InfrastructureLink.INFRASTRUCTURE_LINK.INFRASTRUCTURE_SOURCE_ID, InfrastructureLink.INFRASTRUCTURE_LINK.EXTERNAL_LINK_ID }, true);
    public static final UniqueKey<InfrastructureLinkSafelyTraversedByVehicleTypeRecord> INFRASTRUCTURE_LINK_SAFELY_TRAVERSED_BY_VEHICLE_TYPE_PKEY = Internal.createUniqueKey(InfrastructureLinkSafelyTraversedByVehicleType.INFRASTRUCTURE_LINK_SAFELY_TRAVERSED_BY_VEHICLE_TYPE, DSL.name("infrastructure_link_safely_traversed_by_vehicle_type_pkey"), new TableField[] { InfrastructureLinkSafelyTraversedByVehicleType.INFRASTRUCTURE_LINK_SAFELY_TRAVERSED_BY_VEHICLE_TYPE.INFRASTRUCTURE_LINK_ID, InfrastructureLinkSafelyTraversedByVehicleType.INFRASTRUCTURE_LINK_SAFELY_TRAVERSED_BY_VEHICLE_TYPE.VEHICLE_TYPE }, true);
    public static final UniqueKey<InfrastructureLinkVerticesPgrRecord> INFRASTRUCTURE_LINK_VERTICES_PGR_PKEY = Internal.createUniqueKey(InfrastructureLinkVerticesPgr.INFRASTRUCTURE_LINK_VERTICES_PGR, DSL.name("infrastructure_link_vertices_pgr_pkey"), new TableField[] { InfrastructureLinkVerticesPgr.INFRASTRUCTURE_LINK_VERTICES_PGR.ID }, true);
    public static final UniqueKey<InfrastructureSourceRecord> INFRASTRUCTURE_SOURCE_PKEY = Internal.createUniqueKey(InfrastructureSource.INFRASTRUCTURE_SOURCE, DSL.name("infrastructure_source_pkey"), new TableField[] { InfrastructureSource.INFRASTRUCTURE_SOURCE.INFRASTRUCTURE_SOURCE_ID }, true);
    public static final UniqueKey<PublicTransportStopRecord> PUBLIC_TRANSPORT_STOP_PKEY = Internal.createUniqueKey(PublicTransportStop.PUBLIC_TRANSPORT_STOP, DSL.name("public_transport_stop_pkey"), new TableField[] { PublicTransportStop.PUBLIC_TRANSPORT_STOP.PUBLIC_TRANSPORT_STOP_ID }, true);
    public static final UniqueKey<TrafficFlowDirectionRecord> TRAFFIC_FLOW_DIRECTION_PKEY = Internal.createUniqueKey(TrafficFlowDirection.TRAFFIC_FLOW_DIRECTION, DSL.name("traffic_flow_direction_pkey"), new TableField[] { TrafficFlowDirection.TRAFFIC_FLOW_DIRECTION.TRAFFIC_FLOW_DIRECTION_TYPE }, true);
    public static final UniqueKey<VehicleModeRecord> VEHICLE_MODE_PKEY = Internal.createUniqueKey(VehicleMode.VEHICLE_MODE, DSL.name("vehicle_mode_pkey"), new TableField[] { VehicleMode.VEHICLE_MODE.VEHICLE_MODE_ }, true);
    public static final UniqueKey<VehicleTypeRecord> VEHICLE_TYPE_PKEY = Internal.createUniqueKey(VehicleType.VEHICLE_TYPE, DSL.name("vehicle_type_pkey"), new TableField[] { VehicleType.VEHICLE_TYPE.VEHICLE_TYPE_ }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<InfrastructureLinkRecord, InfrastructureSourceRecord> INFRASTRUCTURE_LINK__INFRASTRUCTURE_LINK_INFRASTRUCTURE_SOURCE_FKEY = Internal.createForeignKey(InfrastructureLink.INFRASTRUCTURE_LINK, DSL.name("infrastructure_link_infrastructure_source_fkey"), new TableField[] { InfrastructureLink.INFRASTRUCTURE_LINK.INFRASTRUCTURE_SOURCE_ID }, Keys.INFRASTRUCTURE_SOURCE_PKEY, new TableField[] { InfrastructureSource.INFRASTRUCTURE_SOURCE.INFRASTRUCTURE_SOURCE_ID }, true);
    public static final ForeignKey<InfrastructureLinkRecord, TrafficFlowDirectionRecord> INFRASTRUCTURE_LINK__INFRASTRUCTURE_LINK_TRAFFIC_FLOW_DIRECTION_FKEY = Internal.createForeignKey(InfrastructureLink.INFRASTRUCTURE_LINK, DSL.name("infrastructure_link_traffic_flow_direction_fkey"), new TableField[] { InfrastructureLink.INFRASTRUCTURE_LINK.TRAFFIC_FLOW_DIRECTION_TYPE }, Keys.TRAFFIC_FLOW_DIRECTION_PKEY, new TableField[] { TrafficFlowDirection.TRAFFIC_FLOW_DIRECTION.TRAFFIC_FLOW_DIRECTION_TYPE }, true);
    public static final ForeignKey<InfrastructureLinkSafelyTraversedByVehicleTypeRecord, InfrastructureLinkRecord> INFRASTRUCTURE_LINK_SAFELY_TRAVERSED_BY_VEHICLE_TYPE__INFRASTRUCTURE_LINK_SAFELY_TRAVERSE_INFRASTRUCTURE_LINK_ID_FKEY = Internal.createForeignKey(InfrastructureLinkSafelyTraversedByVehicleType.INFRASTRUCTURE_LINK_SAFELY_TRAVERSED_BY_VEHICLE_TYPE, DSL.name("infrastructure_link_safely_traverse_infrastructure_link_id_fkey"), new TableField[] { InfrastructureLinkSafelyTraversedByVehicleType.INFRASTRUCTURE_LINK_SAFELY_TRAVERSED_BY_VEHICLE_TYPE.INFRASTRUCTURE_LINK_ID }, Keys.INFRASTRUCTURE_LINK_PKEY, new TableField[] { InfrastructureLink.INFRASTRUCTURE_LINK.INFRASTRUCTURE_LINK_ID }, true);
    public static final ForeignKey<InfrastructureLinkSafelyTraversedByVehicleTypeRecord, VehicleTypeRecord> INFRASTRUCTURE_LINK_SAFELY_TRAVERSED_BY_VEHICLE_TYPE__INFRASTRUCTURE_LINK_SAFELY_TRAVERSED_BY_VEHIC_VEHICLE_TYPE_FKEY = Internal.createForeignKey(InfrastructureLinkSafelyTraversedByVehicleType.INFRASTRUCTURE_LINK_SAFELY_TRAVERSED_BY_VEHICLE_TYPE, DSL.name("infrastructure_link_safely_traversed_by_vehic_vehicle_type_fkey"), new TableField[] { InfrastructureLinkSafelyTraversedByVehicleType.INFRASTRUCTURE_LINK_SAFELY_TRAVERSED_BY_VEHICLE_TYPE.VEHICLE_TYPE }, Keys.VEHICLE_TYPE_PKEY, new TableField[] { VehicleType.VEHICLE_TYPE.VEHICLE_TYPE_ }, true);
    public static final ForeignKey<PublicTransportStopRecord, InfrastructureLinkRecord> PUBLIC_TRANSPORT_STOP__PUBLIC_TRANSPORT_STOP_INFRASTRUCTURE_LINK_FKEY = Internal.createForeignKey(PublicTransportStop.PUBLIC_TRANSPORT_STOP, DSL.name("public_transport_stop_infrastructure_link_fkey"), new TableField[] { PublicTransportStop.PUBLIC_TRANSPORT_STOP.LOCATED_ON_INFRASTRUCTURE_LINK_ID }, Keys.INFRASTRUCTURE_LINK_PKEY, new TableField[] { InfrastructureLink.INFRASTRUCTURE_LINK.INFRASTRUCTURE_LINK_ID }, true);
    public static final ForeignKey<PublicTransportStopRecord, InfrastructureSourceRecord> PUBLIC_TRANSPORT_STOP__PUBLIC_TRANSPORT_STOP_INFRASTRUCTURE_SOURCE_FKEY = Internal.createForeignKey(PublicTransportStop.PUBLIC_TRANSPORT_STOP, DSL.name("public_transport_stop_infrastructure_source_fkey"), new TableField[] { PublicTransportStop.PUBLIC_TRANSPORT_STOP.INFRASTRUCTURE_SOURCE_ID }, Keys.INFRASTRUCTURE_SOURCE_PKEY, new TableField[] { InfrastructureSource.INFRASTRUCTURE_SOURCE.INFRASTRUCTURE_SOURCE_ID }, true);
    public static final ForeignKey<VehicleTypeRecord, VehicleModeRecord> VEHICLE_TYPE__VEHICLE_TYPE_BELONGING_TO_VEHICLE_MODE_FKEY = Internal.createForeignKey(VehicleType.VEHICLE_TYPE, DSL.name("vehicle_type_belonging_to_vehicle_mode_fkey"), new TableField[] { VehicleType.VEHICLE_TYPE.BELONGING_TO_VEHICLE_MODE }, Keys.VEHICLE_MODE_PKEY, new TableField[] { VehicleMode.VEHICLE_MODE.VEHICLE_MODE_ }, true);
}
