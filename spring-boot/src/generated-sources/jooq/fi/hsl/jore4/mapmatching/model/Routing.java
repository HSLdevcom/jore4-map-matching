/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore4.mapmatching.model;


import fi.hsl.jore4.mapmatching.model.tables.InfrastructureLink;
import fi.hsl.jore4.mapmatching.model.tables.InfrastructureLinkSafelyTraversedByVehicleType;
import fi.hsl.jore4.mapmatching.model.tables.InfrastructureLinkVerticesPgr;
import fi.hsl.jore4.mapmatching.model.tables.InfrastructureSource;
import fi.hsl.jore4.mapmatching.model.tables.TrafficFlowDirection;
import fi.hsl.jore4.mapmatching.model.tables.VehicleMode;
import fi.hsl.jore4.mapmatching.model.tables.VehicleType;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Routing extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>routing</code>
     */
    public static final Routing ROUTING = new Routing();

    /**
     * The infrastructure links, e.g. road or rail elements: https://www.transmodel-cen.eu/model/index.htm?goto=2:1:1:1:453
     */
    public final InfrastructureLink INFRASTRUCTURE_LINK = InfrastructureLink.INFRASTRUCTURE_LINK;

    /**
     * Which infrastructure links are safely traversed by which vehicle types?
     */
    public final InfrastructureLinkSafelyTraversedByVehicleType INFRASTRUCTURE_LINK_SAFELY_TRAVERSED_BY_VEHICLE_TYPE = InfrastructureLinkSafelyTraversedByVehicleType.INFRASTRUCTURE_LINK_SAFELY_TRAVERSED_BY_VEHICLE_TYPE;

    /**
     * Topology nodes created for infrastructure links by pgRougting
     */
    public final InfrastructureLinkVerticesPgr INFRASTRUCTURE_LINK_VERTICES_PGR = InfrastructureLinkVerticesPgr.INFRASTRUCTURE_LINK_VERTICES_PGR;

    /**
     * The enumerated sources for infrastructure network entities
     */
    public final InfrastructureSource INFRASTRUCTURE_SOURCE = InfrastructureSource.INFRASTRUCTURE_SOURCE;

    /**
     * The possible directions of traffic flow on infrastructure links. Using code values from Digiroad codeset.
     */
    public final TrafficFlowDirection TRAFFIC_FLOW_DIRECTION = TrafficFlowDirection.TRAFFIC_FLOW_DIRECTION;

    /**
     * The vehicle modes from Transmodel: https://www.transmodel-cen.eu/model/index.htm?goto=1:6:1:283
     */
    public final VehicleMode VEHICLE_MODE = VehicleMode.VEHICLE_MODE;

    /**
     * The vehicle types from Transmodel: https://www.transmodel-cen.eu/model/index.htm?goto=1:6:9:360
     */
    public final VehicleType VEHICLE_TYPE = VehicleType.VEHICLE_TYPE;

    /**
     * No further instances allowed
     */
    private Routing() {
        super("routing", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        return Arrays.<Sequence<?>>asList(
            Sequences.INFRASTRUCTURE_LINK_VERTICES_PGR_ID_SEQ);
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.<Table<?>>asList(
            InfrastructureLink.INFRASTRUCTURE_LINK,
            InfrastructureLinkSafelyTraversedByVehicleType.INFRASTRUCTURE_LINK_SAFELY_TRAVERSED_BY_VEHICLE_TYPE,
            InfrastructureLinkVerticesPgr.INFRASTRUCTURE_LINK_VERTICES_PGR,
            InfrastructureSource.INFRASTRUCTURE_SOURCE,
            TrafficFlowDirection.TRAFFIC_FLOW_DIRECTION,
            VehicleMode.VEHICLE_MODE,
            VehicleType.VEHICLE_TYPE);
    }
}
