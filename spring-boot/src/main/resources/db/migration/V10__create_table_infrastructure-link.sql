--
-- Create table for infrastructure links.
--

CREATE TABLE routing.infrastructure_link
(
    infrastructure_link_id          bigint NOT NULL,
    infrastructure_source_id        int NOT NULL,
    external_link_id                text NOT NULL,
    traffic_flow_direction_type     int NOT NULL,
    municipality_code               int,
    external_link_type              int,
    external_link_state             int,
    name                            jsonb
);

COMMENT ON TABLE routing.infrastructure_link IS
    'The infrastructure links, e.g. road or rail elements: https://www.transmodel-cen.eu/model/index.htm?goto=2:1:1:1:453';
COMMENT ON COLUMN routing.infrastructure_link.infrastructure_link_id IS
    'The local ID of the infrastructure link. The requirement of the ID being of integer type is imposed by pgRouting.';
COMMENT ON COLUMN routing.infrastructure_link.infrastructure_source_id IS
    'The ID of the external source system providing the link data.';
COMMENT ON COLUMN routing.infrastructure_link.external_link_id IS
    'The ID of the infrastructure link within the external source system providing the link data';
COMMENT ON COLUMN routing.infrastructure_link.traffic_flow_direction_type IS
    'A numeric enum value for direction of traffic flow allowed on the infrastructure link';
COMMENT ON COLUMN routing.infrastructure_link.municipality_code IS
    'The official code of municipality in which the link is located';
COMMENT ON COLUMN routing.infrastructure_link.external_link_type IS
    'The link type code defined within the external source system providing the link data';
COMMENT ON COLUMN routing.infrastructure_link.external_link_state IS
    'The link state code defined within the external source system providing the link data';
COMMENT ON COLUMN routing.infrastructure_link.name IS
    'JSON object containing name of road or street in different localisations';

-- Add geometry column.
SELECT AddGeometryColumn('routing', 'infrastructure_link', 'geom', 3067, 'LINESTRING', 2);
ALTER TABLE routing.infrastructure_link ALTER COLUMN geom SET NOT NULL;
COMMENT ON COLUMN routing.infrastructure_link.geom IS
    'The 2D linestring geometry describing the shape of the infrastructure link. The requirement of two-dimensionality and metric unit is imposed by pgRouting. The EPSG:3067 coordinate system applied is the same as is used in Digiroad.';

-- Add columns required by pgRouting extension.
ALTER TABLE routing.infrastructure_link
    ADD COLUMN start_node_id bigint NOT NULL,
    ADD COLUMN end_node_id bigint NOT NULL,
    ADD COLUMN cost double precision NOT NULL,
    ADD COLUMN reverse_cost double precision NOT NULL;

COMMENT ON COLUMN routing.infrastructure_link.start_node_id IS
    'The ID of the start node for the infrastructure link based on its linestring geometry. The node points are resolved and generated by calling `pgr_createTopology` function of pgRouting.';
COMMENT ON COLUMN routing.infrastructure_link.end_node_id IS
    'The ID of the end node for the infrastructure link based on its linestring geometry. The node points are resolved and generated by calling `pgr_createTopology` function of pgRouting.';
COMMENT ON COLUMN routing.infrastructure_link.cost IS
    'The weight in terms of graph traversal for forward direction of the linestring geometry of the infrastructure link. When negative, the forward direction of the link (edge) will not be part of the graph within the shortest path calculation.';
COMMENT ON COLUMN routing.infrastructure_link.reverse_cost IS
    'The weight in terms of graph traversal for reverse direction of the linestring geometry of the infrastructure link. When negative, the reverse direction of the link (edge) will not be part of the graph within the shortest path calculation.';

-- Add constraints.
ALTER TABLE routing.infrastructure_link
    ADD CONSTRAINT infrastructure_link_pkey PRIMARY KEY (infrastructure_link_id),
    ADD CONSTRAINT uk_infrastructure_link_external_ref UNIQUE (infrastructure_source_id, external_link_id),
    ADD CONSTRAINT infrastructure_link_traffic_flow_direction_fkey FOREIGN KEY (traffic_flow_direction_type)
        REFERENCES routing.traffic_flow_direction (traffic_flow_direction_type),
    ADD CONSTRAINT infrastructure_link_infrastructure_source_fkey FOREIGN KEY (infrastructure_source_id)
        REFERENCES routing.infrastructure_source (infrastructure_source_id);

-- Create indices to improve performance of pgRouting functions.
CREATE INDEX infrastructure_link_geom_idx ON routing.infrastructure_link USING GIST(geom);
CREATE INDEX infrastructure_link_start_node_idx ON routing.infrastructure_link (start_node_id);
CREATE INDEX infrastructure_link_end_node_idx ON routing.infrastructure_link (end_node_id);
